name: Build Debian Images

on:
  schedule:
    - cron: '0 0 * * *' # Build amd64 (Daily at 00:00 UTC).
    - cron: '0 0 * * 1' # Build arm64 (Weekly on Monday at 00:00 UTC).
  workflow_dispatch:
    inputs:
      publish:
        type: boolean
        default: false
        description: Publish built image
      build-arm64:
        type: boolean
        default: false
        description: Build arm64 images

jobs:
  debian:
    runs-on: ${{ matrix.architecture == 'arm64' && 'Ubuntu_ARM64_4C_16G_01' || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        release:
          - buster
          - bullseye
          - sid
          - bookworm
          - trixie
        variant:
          - default
          - cloud
        architecture:
          - amd64
          - arm64
        build_arm64:
          - ${{ inputs.build-arm64 == true || github.event.schedule == '0 0 * * 1' }}
        exclude:
          - {architecture: amd64, build_arm64: true}
          - {architecture: arm64, build_arm64: false}
    env:
      type: "container"
      distro: "${{ github.job }}"
      target: "${HOME}/build"

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/image-setup

      - name: Determine image types
        run: |
          ARCH="${{ matrix.architecture }}"
          if [ "${ARCH}" = "amd64" ]; then
              echo "type=container,vm" >> $GITHUB_ENV
          fi

      - name: Build image
        run: |
          TIMEOUT=1800
          YAML="${{ github.workspace }}/images/${{ env.distro }}.yaml"
          ARCH="${{ matrix.architecture }}"
          TYPE="${{ env.type }}"

          ./bin/build-distro "${YAML}" "${ARCH}" "${TYPE}" "${TIMEOUT}" "${{ env.target }}" \
              -o image.architecture=${{ matrix.architecture }} \
              -o image.release=${{ matrix.release }} \
              -o image.variant=${{ matrix.variant }} \
              -o source.url="https://deb.debian.org/debian"

      - name: Print build artifacts
        run: ls -lah "${{ env.target }}"

      - name: Test container image
        uses: ./.github/actions/image-test
        if: contains(env.type, 'container')
        with:
          type: container
          target: ${{ env.target }}
          distro: ${{ env.distro }}
          release: ${{ matrix.release }}
          variant: ${{ matrix.variant }}

      - name: Test VM image
        uses: ./.github/actions/image-test
        if: contains(env.type, 'vm')
        with:
          type: vm
          target: ${{ env.target }}
          distro: ${{ env.distro }}
          release: ${{ matrix.release }}
          variant: ${{ matrix.variant }}

      - name: Upload image
        uses: ./.github/actions/image-upload
        if: github.event_name == 'schedule' || inputs.publish == true
        with:
          target: ${{ env.target }}
          image_dir: "${{ env.distro }}/${{ matrix.release }}/${{ matrix.architecture }}/${{ matrix.variant }}"
          ssh_private_key: "${{ secrets.LXD_INFRA_IMAGES_KEY }}"
