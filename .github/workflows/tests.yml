name: Tests
on:
  pull_request:
    paths:
      - '.github/workflows/tests.yml'
      - 'bin/**'
      - 'tests/**'
  schedule:
    - cron: '38 6 * * *'
  workflow_dispatch:
    inputs:
      ubuntu-releases:
        description: Ubuntu releases to run the tests against. In JSON format, i.e. '["22.04", "24.04"]'.
        type: choice
        default: '["22.04", "24.04"]'
        options:
          - '["22.04", "24.04"]'
          - '["22.04"]'
          - '["24.04"]'
      snap-track:
        description: Snap track to run the tests i.e. '["latest/edge", "5.0/candidate"]'.
        type: choice
        default: '["latest/edge"]'
        options:
          - '["latest/edge"]'
          - '["latest/candidate"]'
          - '["latest/stable"]'
          - '["6/edge"]'
          - '["6/candidate"]'
          - '["6/stable"]'
          - '["5.21/edge"]'
          - '["5.21/candidate"]'
          - '["5.21/stable"]'
          - '["5.0/edge"]'
          - '["5.0/candidate"]'
          - '["5.0/stable"]'
          - '["4.0/edge"]'
          - '["4.0/candidate"]'
          - '["4.0/stable"]'
      self-hosted-runner:
        type: boolean
        description: Whether to use self-hosted runners to run the jobs.
        default: false
      tmate-debug:
        description: Use tmate debugging session on integration test failure.
        type: boolean
        default: false
      tmate-timeout:
        description: Timeout in minutes to keep tmate debugging session.
        type: number
        default: 30

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}-${{ inputs.ubuntu-releases }}-${{ inputs.snap-track }}
  # XXX: scheduled runs should not cancel manually triggered ones
  cancel-in-progress: ${{ !contains(github.event_name, 'schedule')}}

defaults:
  run:
    # Make sure bash is always invoked with `-eo pipefail`
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell
    shell: bash

jobs:
  code-tests:
    if: ${{ github.event_name != 'schedule' || github.repository == 'canonical/lxd-ci' }}
    name: Code
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          # A non-shallow clone is needed for the Differential ShellCheck
          fetch-depth: 0

      - name: Require GHA pinning
        uses: canonical/lxd/.github/actions/require-gha-pinning@main

      - id: ShellCheck
        name: Differential ShellCheck
        uses: redhat-plumbers-in-action/differential-shellcheck@0d9e5b29625f871e6a4215380486d6f1a7cb6cdd # v5.5.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          strict-check-on-push: true
        if: github.event_name == 'pull_request'

      - name: Upload artifact with ShellCheck defects in SARIF format
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: Differential ShellCheck SARIF
          path: ${{ steps.ShellCheck.outputs.sarif }}
        if: github.event_name == 'pull_request'

  system-tests:
    if: ${{ github.event_name != 'schedule' || github.repository == 'canonical/lxd-ci' }}
    name: ${{ matrix.test }} (${{ matrix.track }} - ${{ matrix.os }})
    runs-on: ubuntu-${{ matrix.os }}
    # avoid runaway test burning 6 hours of CI
    timeout-minutes: 60
    permissions:
      # need that to manipulate caches
      actions: write
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJSON(inputs.ubuntu-releases || '["22.04", "24.04"]') }}
        track: ${{ fromJSON(inputs.snap-track || '["latest/edge", "5.21/edge", "5.0/edge", "4.0/edge"]') }}
        test:
          - cgroup
          - cloud-init
          - cluster
          - container
          - container-copy
          - container-nesting
          - conversion
          - cpu-vm
          - devlxd-container
          - devlxd-vm
          - efi-vars-editor-vm
          - lxd-installer
          - lxd-user
          - interception
          - network-bridge-firewall
          - network-ovn ovn:deb
          - network-ovn ovn:latest/edge
          - network-routed
          - pylxd
          - qemu-external-vm
          - snapd
          - storage-buckets
          - storage-disks-vm
          - storage-metadata
          - storage-vm btrfs
          - storage-vm ceph
          - storage-vm dir
          - storage-vm lvm
          - storage-vm lvm-thin
          - storage-vm zfs
          - storage-volumes-vm
          - tpm-vm
          - ui chromium
          - ui firefox
          - vm
          - vm-migration
          - vm-nesting
        exclude:
          # not compatible with 4.0/*
          - test: cloud-init
            track: "4.0/candidate"
          - test: container-copy
            track: "4.0/candidate"
          - test: container-nesting
            track: "4.0/candidate"
          - test: conversion
            track: "4.0/candidate"
          - test: cpu-vm
            track: "4.0/candidate"
          - test: devlxd-vm
            track: "4.0/candidate"
          - test: efi-vars-editor-vm
            track: "4.0/candidate"
          - test: lxd-installer
            track: "4.0/candidate"
          - test: lxd-user
            track: "4.0/candidate"
          - test: network-ovn ovn:deb
            track: "4.0/candidate"
          - test: network-ovn ovn:latest/edge
            track: "4.0/candidate"
          - test: qemu-external-vm
            track: "4.0/candidate"
          - test: storage-buckets
            track: "4.0/candidate"
          - test: storage-disks-vm
            track: "4.0/candidate"
          - test: storage-metadata
            track: "4.0/candidate"
          - test: storage-vm btrfs
            track: "4.0/candidate"
          - test: storage-vm ceph
            track: "4.0/candidate"
          - test: storage-vm dir
            track: "4.0/candidate"
          - test: storage-vm lvm
            track: "4.0/candidate"
          - test: storage-vm lvm-thin
            track: "4.0/candidate"
          - test: storage-vm zfs
            track: "4.0/candidate"
          - test: storage-volumes-vm
            track: "4.0/candidate"
          - test: tpm-vm
            track: "4.0/candidate"
          - test: ui chromium
            track: "4.0/candidate"
          - test: ui firefox
            track: "4.0/candidate"
          - test: vm-migration
            track: "4.0/candidate"
          - test: cloud-init
            track: "4.0/edge"
          - test: container-copy
            track: "4.0/edge"
          - test: container-nesting
            track: "4.0/edge"
          - test: conversion
            track: "4.0/edge"
          - test: cpu-vm
            track: "4.0/edge"
          - test: devlxd-vm
            track: "4.0/edge"
          - test: efi-vars-editor-vm
            track: "4.0/edge"
          - test: lxd-installer
            track: "4.0/edge"
          - test: lxd-user
            track: "4.0/edge"
          - test: network-ovn ovn:deb
            track: "4.0/edge"
          - test: network-ovn ovn:latest/edge
            track: "4.0/edge"
          - test: qemu-external-vm
            track: "4.0/edge"
          - test: storage-buckets
            track: "4.0/edge"
          - test: storage-disks-vm
            track: "4.0/edge"
          - test: storage-metadata
            track: "4.0/edge"
          - test: storage-vm btrfs
            track: "4.0/edge"
          - test: storage-vm ceph
            track: "4.0/edge"
          - test: storage-vm dir
            track: "4.0/edge"
          - test: storage-vm lvm
            track: "4.0/edge"
          - test: storage-vm lvm-thin
            track: "4.0/edge"
          - test: storage-vm zfs
            track: "4.0/edge"
          - test: storage-volumes-vm
            track: "4.0/edge"
          - test: tpm-vm
            track: "4.0/edge"
          - test: ui chromium
            track: "4.0/edge"
          - test: ui firefox
            track: "4.0/edge"
          - test: vm-migration
            track: "4.0/edge"
          # not compatible with 5.0/*
          - test: cloud-init
            track: "5.0/candidate"
          - test: cloud-init
            track: "5.0/edge"
          - test: efi-vars-editor-vm
            track: "5.0/candidate"
          - test: efi-vars-editor-vm
            track: "5.0/edge"
          - test: lxd-installer
            track: "5.0/candidate"
          - test: lxd-installer
            track: "5.0/edge"
          - test: network-ovn ovn:latest/edge
            track: "5.0/candidate"
          - test: network-ovn ovn:latest/edge
            track: "5.0/edge"
          - test: qemu-external-vm
            track: "5.0/candidate"
          - test: qemu-external-vm
            track: "5.0/edge"
          - test: vm-migration
            track: "5.0/candidate"
          - test: vm-migration
            track: "5.0/edge"
          # not compatible with 5.21/*
          - test: lxd-installer
            track: "5.21/stable"
          - test: lxd-installer
            track: "5.21/candidate"
          - test: lxd-installer
            track: "5.21/edge"
          - test: qemu-external-vm
            track: "5.21/stable"
          - test: qemu-external-vm
            track: "5.21/candidate"
          - test: qemu-external-vm
            track: "5.21/edge"
          # some tests are not worth testing on specific OSes
          - os: 22.04
            test: lxd-installer
          - os: 22.04
            test: qemu-external-vm
          # skip track/os combinations that are too far appart
          - os: 24.04
            track: "4.0/candidate"
          - os: 24.04
            track: "4.0/edge"
          - os: 24.04
            track: "5.0/candidate"
          - os: 24.04
            track: "5.0/edge"

    steps:
      - name: Tune disk performance
        uses: canonical/lxd/.github/actions/tune-disk-performance@main

      - name: Reclaim some memory
        uses: canonical/lxd/.github/actions/reclaim-memory@main

      - name: Reclaim disk space
        if: ${{ matrix.test == 'conversion' || startsWith(matrix.test, 'storage-') || matrix.test == 'vm-nesting' }}
        uses: canonical/lxd/.github/actions/reclaim-disk-space@main

      - name: Disable Docker
        uses: canonical/lxd/.github/actions/disable-docker@main

      - name: "Disable br_netfilter"
        run: |
          set -eux
          # XXX: br_netfilter causes subtle issues by subjecting internal
          #      bridge traffic to NAT/MASQUERADING and IP filtering. This
          #      modules is not normally loaded on stock Ubuntu installs but it
          #      is on GHA runners.
          if lsmod | grep -qw ^br_netfilter; then
            sudo modprobe -r br_netfilter
          fi

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # needed for cache key
      - name: Get Date
        id: get-date
        if: ${{ matrix.test == 'qemu-external-vm' }}
        run: |
          echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT
        shell: bash

      # for simplicity, just use one cache directory
      # and make it valid for one day
      - uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        id: cache-restore
        if: ${{ matrix.test == 'qemu-external-vm' }}
        with:
          path: /home/runner/work/cache
          key: cache-${{ steps.get-date.outputs.date }}

      - name: Setup MicroCeph
        if: ${{ matrix.test == 'conversion' || matrix.test == 'storage-buckets' || matrix.test == 'storage-vm ceph' || matrix.test == 'storage-volumes-vm' }}
        uses: canonical/lxd/.github/actions/setup-microceph@main

      - name: CPU info
        run: lscpu

      - name: Install Node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        if: ${{ startswith(matrix.test, 'ui ') }}
        with:
          node-version: 22

      - name: ${{ matrix.test }} (${{ matrix.track }})
        run: |
          set -eux

          # XXX: prevent accidental usage of `images:` in CI test jobs.
          #      All tests should be done using officially supported images.
          echo '127.0.0.1 images.lxd.canonical.com' | sudo tee /etc/hosts

          TEST_SCRIPT="$(echo ${{ matrix.test }} | cut -d " " -f 1)"
          EXTRA_ARGS="$(echo ${{ matrix.test }} | cut -d " " -f 2- --only-delimited)"
          if [ "${TEST_SCRIPT}" = "cluster" ]; then
            dst_track="${{ matrix.track }}"
            src_track="$(echo "${dst_track}" | cut -d/ -f1)/stable"
            EXTRA_ARGS="${EXTRA_ARGS:-3} ${src_track} ${{ matrix.track }}"
          elif [ "${TEST_SCRIPT}" = "network-ovn" ]; then
            if [ -n "${EXTRA_ARGS}" ]; then
              # Strip the `ovn:` prefix
              export OVN_SOURCE="${EXTRA_ARGS##ovn:}"
              EXTRA_ARGS=""
            fi
          fi
          sudo --preserve-env=GITHUB_ACTIONS,GITHUB_STEP_SUMMARY,TEST_IMG,OVN_SOURCE ./bin/local-run "tests/${TEST_SCRIPT}" ${{ matrix.track }} ${EXTRA_ARGS:-}

      # always update cache as we have our own logic of
      # cache invalidation and updates in addition to a date check
      - name: Delete previous cache
        if: ${{ steps.cache-restore.outputs.cache-hit }}
        continue-on-error: true
        run: |
          gh cache delete "cache-${{ steps.get-date.outputs.date }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set lxd channel env variable
        if: ${{ always() && startsWith(matrix.test, 'ui ') }}
        id: lxd-env
        run: |
          # need to change / to - in lxd channel string for report naming
          LXD_CHANNEL=$(echo '${{ matrix.track }}' | sed 's#/#-#g')
          echo "LXD_CHANNEL=$LXD_CHANNEL" >> $GITHUB_OUTPUT
      - name: Upload ${{ matrix.test }}-${{ matrix.track }} test reports
        if: ${{ always() && startsWith(matrix.test, 'ui ') }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: test-report-${{ matrix.test }}-lxd-${{ steps.lxd-env.outputs.LXD_CHANNEL }}-os-${{ matrix.os }}
          path: lxd-ui/test-results
          retention-days: 1
      - uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        if: ${{ matrix.test == 'qemu-external-vm' }}
        with:
          path: /home/runner/work/cache
          key: cache-${{ steps.get-date.outputs.date }}

      - name: Tmate debugging session (self-hosted)
        if: ${{ failure() && inputs.tmate-debug && inputs.self-hosted-runner }}
        uses: canonical/action-tmate@main
        timeout-minutes: ${{ fromJSON(inputs.tmate-timeout) }}
      - name: Tmate debugging session (gh-hosted)
        if: ${{ failure() && inputs.tmate-debug && !inputs.self-hosted-runner }}
        uses: mxschmitt/action-tmate@c0afd6f790e3a5564914980036ebf83216678101 # v3.23
        timeout-minutes: ${{ fromJSON(inputs.tmate-timeout) }}
