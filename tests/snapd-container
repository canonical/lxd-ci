#!/bin/bash -eu
CNAME="snapd-$(uuidgen)"

ARCH=${1}
shift
CORE=${1}
shift

cleanup() {
    lxc delete --force "${CNAME}"
}

trap cleanup EXIT HUP INT TERM

# Create the container
lxc launch "images:ubuntu/bionic/${ARCH}" "${CNAME}" -c security.nesting=true

set -x

(
cat << EOF
#!/bin/sh
# Wait for network
while :; do
    ping -W1 -c1 linuxcontainers.org >/dev/null 2>&1 && break
    sleep 1
done

set -eux

ARCHIVE="http://us.archive.ubuntu.com/ubuntu"
if grep -q ports /etc/apt/sources.list; then
    ARCHIVE="http://us.ports.ubuntu.com/ubuntu-ports"
fi

# Setup clean sources
cat > /etc/apt/sources.list << EOL
deb \${ARCHIVE} bionic main universe restricted multiverse
deb \${ARCHIVE} bionic-updates main universe restricted multiverse
deb \${ARCHIVE} bionic-security main universe restricted multiverse
deb \${ARCHIVE} bionic-backports main universe restricted multiverse
EOL
apt-get update --yes

# Install dependencies
apt-get install --no-install-recommends --yes snapd fuse curl
mkdir -p /lib/modules
useradd -m -s /bin/bash jenkins

# Configure to use the proxy
curl -s http://canonical-lxd.stgraber.org/config/snapd.sh | sh

# Install specific core snap channels if requested
if [ "${CORE}" != "stable" ]; then
    snap install core18 --channel="${CORE}" --cohort=+
    snap install snapd --channel="${CORE}" --cohort=+
fi

exit 0
EOF
) | lxc file push - "${CNAME}/root/build.sh" --mode=755
lxc file push /lxc-ci/bin/test-lxd-snapd "${CNAME}/root/test.sh" --mode=755
lxc exec "${CNAME}" -- /root/build.sh
lxc exec "${CNAME}" -- /root/test.sh "$@"
