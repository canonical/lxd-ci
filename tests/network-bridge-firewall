#!/bin/sh
set -eux

# Refresh apt
apt-get update

# Install LXD
install_lxd

# Configure LXD
lxc storage create default zfs
lxc network create lxdbr0 \
    ipv4.address=192.0.2.1/24 \
    ipv6.address=2001:db8::1/64 \
    ipv4.dhcp.ranges=192.0.2.2-192.0.2.199
lxc profile device add default root disk path=/ pool=default

echo "=> Setting up firewall tooling and checking versions"
apt-get install --no-install-recommends --yes nftables iptables ebtables
update-alternatives --set iptables /usr/sbin/iptables-legacy
update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
update-alternatives --set ebtables /usr/sbin/ebtables-legacy

# Check legacy versions installed.
iptables --version 2>&1 | grep legacy
ip6tables --version 2>&1 | grep legacy
ebtables --version 2>&1 | grep legacy

# Setup bridge filter and unmanaged bridge.s
modprobe br_netfilter
ip link add lxdbr0unmanaged type bridge

firewallTests() {
    lxc launch ubuntu-daily:22.04 c1
    sleep 10

    managed=0

    if lxc config show c1 --expanded | grep -qF "network: lxdbr0"; then
        echo "=> Performing basic DHCP/SLAAC ping tests"
        lxc exec c1 -- ping -c1 192.0.2.1
        lxc exec c1 -- ping -c1 2001:db8::1
        managed=1
    fi

    # Disable DHCP client and SLAAC acceptance so we don't get automatic IPs added.
    lxc exec c1 -- rm -fr /etc/netplan
    lxc exec c1 -- netplan apply
    lxc exec c1 -- sysctl net.ipv6.conf.eth0.accept_ra=0

    echo "=> Performing faked source IP ping tests without filtering"
    lxc exec c1 -- ip a flush dev eth0
    lxc exec c1 -- ip a add 192.0.2.254/24 dev eth0
    lxc exec c1 -- ip a add 2001:db8::254/64 dev eth0 nodad
    lxc exec c1 -- ip a
    lxc exec c1 -- ping -c1 192.0.2.1
    lxc exec c1 -- ping -c1 2001:db8::1

    echo "=> Performing faked source IP ping tests with filtering"
    if [ $managed -eq 1 ]; then
        lxc config device override c1 eth0 \
            security.mac_filtering=true \
            security.ipv4_filtering=true \
            security.ipv6_filtering=true
    else
        lxc config device override c1 eth0 \
            security.mac_filtering=true \
            security.ipv4_filtering=true \
            security.ipv6_filtering=true \
            ipv4.address=192.0.2.2 \
            ipv6.address=2001:db8::2
    fi

    lxc exec c1 -- ip a flush dev eth0
    lxc exec c1 -- ip a add 192.0.2.254/24 dev eth0
    lxc exec c1 -- ip a add 2001:db8::254/64 dev eth0 nodad
    lxc exec c1 -- ip a
    ! lxc exec c1 -- ping -c1 192.0.2.1 || false
    ! lxc exec c1 -- ping -c1 2001:db8::1 || false

    echo "=> Performing faked source MAC ping tests without filtering"
    lxc stop -f c1

    if [ $managed -eq 1 ]; then
        lxc config device set c1 eth0 \
            security.mac_filtering=false \
            security.ipv4_filtering=false \
            security.ipv6_filtering=false
    else
        lxc config device set c1 eth0 \
            security.mac_filtering=false \
            security.ipv4_filtering=false \
            security.ipv6_filtering=false \
            ipv4.address= \
            ipv6.address=
    fi

    lxc start c1
    sleep 10
    lxc exec c1 -- sysctl net.ipv6.conf.eth0.accept_ra=0
    lxc exec c1 -- ip a flush dev eth0
    lxc exec c1 -- ip link set dev eth0 address 00:11:22:33:44:56 up
    lxc exec c1 -- ip a add 192.0.2.254/24 dev eth0
    lxc exec c1 -- ip a add 2001:db8::254/64 dev eth0 nodad
    lxc exec c1 -- ip a
    lxc exec c1 -- ping -c1 192.0.2.1
    lxc exec c1 -- ping -c1 2001:db8::1

    echo "=> Performing faked source MAC ping tests with filtering"
    lxc config device set c1 eth0 security.mac_filtering=true
    lxc exec c1 -- ip a
    ! lxc exec c1 -- ping -c1 192.0.2.1 || false
    ! lxc exec c1 -- ping -c1 2001:db8::1 || false

    lxc delete -f c1
}

networkLimitsPriorityNftablesTest() {
    lxc launch ubuntu-daily:22.04 c1
    sleep 10

    prio=7
    ctEth0Hostname=$(lxc config get "c1" volatile.eth0.host_name)
    tempNftTableName="network_bridge_limits_prio_temp"

    # prepare a trap for skb's with skb->priority is set
    nft add table netdev "${tempNftTableName}"
    nft add chain netdev "${tempNftTableName}" skb_with_prio_trap "{ type filter hook egress device \"${ctEth0Hostname}\" priority filter + 1; policy accept; }"
    nft add rule netdev "${tempNftTableName}" skb_with_prio_trap meta priority 0:$prio counter

    lxc config device override c1 eth0 limits.priority=$prio

    packetsBefore=$(nft list table netdev "${tempNftTableName}" | grep meta | awk '{ print $6 }')

    packetsToSend=14
    # generate some network packets
    lxc exec c1 -- ping -c"${packetsToSend}" 192.0.2.1

    packetsAfter=$(nft list table netdev "${tempNftTableName}" | grep meta | awk '{ print $6 }')
    packetsDiff=$((packetsAfter - packetsBefore))

    [ "${packetsDiff}" -ge "${packetsToSend}" ]

    nft delete table netdev "${tempNftTableName}"

    lxc delete -f c1
}

echo "=> Performing nftables managed bridge tests"
# Check by default on fresh system we detect and use nftables.
lxc info | grep 'firewall: nftables'
lxc profile device add default eth0 nic network=lxdbr0
firewallTests

echo "=> Performing nftables network device limits.priority option test"
networkLimitsPriorityNftablesTest

echo "=> Performing nftables unmanaged bridge tests"
ip a flush dev lxdbr0 # Clear duplicate address from lxdbr0.
ip link set lxdbr0 down
ip a add 192.0.2.1/24 dev lxdbr0unmanaged
ip a add 2001:db8::1/64 dev lxdbr0unmanaged
ip link set lxdbr0unmanaged up
lxc profile device remove default eth0
lxc profile device add default eth0 nic \
    nictype=bridged \
    parent=lxdbr0unmanaged
firewallTests
lxc profile device remove default eth0
ip a flush dev lxdbr0unmanaged

echo "=> Performing xtables managed bridge tests"
lxc profile device add default eth0 nic network=lxdbr0
nft flush ruleset
iptables -A INPUT
systemctl reload snap.lxd.daemon
sleep 5

# Check if xtables is in use we detect and use xtables.
lxc info | grep 'firewall: xtables'
firewallTests

echo "=> Performing xtables unmanaged bridge tests"
ip a flush dev lxdbr0 # Clear duplicate address from lxdbr0.
ip link set lxdbr0 down
ip a add 192.0.2.1/24 dev lxdbr0unmanaged
ip a add 2001:db8::1/64 dev lxdbr0unmanaged
ip link set lxdbr0unmanaged up
lxc profile device remove default eth0
lxc profile device add default eth0 nic \
    nictype=bridged \
    parent=lxdbr0unmanaged
firewallTests
lxc profile device remove default eth0
ip link delete lxdbr0unmanaged

# Cleanup.
lxc profile device remove default root
lxc network delete lxdbr0
lxc storage delete default

# Clear firewall.
lxd shutdown
iptables -D INPUT

FAIL=0
