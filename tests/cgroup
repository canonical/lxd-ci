#!/bin/sh
set -eu

waitSnapdSeed() (
  set +x
  for i in $(seq 60); do # Wait up to 60s.
    if systemctl show snapd.seeded.service --value --property SubState | grep -qx exited; then
      return 0 # Success.
    fi

    sleep 1
  done

  echo "snapd not seeded after ${i}s"
  return 1 # Failed.
)

cleanup() {
    echo ""
    if [ "${FAIL}" = "1" ]; then
        echo "Test failed"
        exit 1
    fi

    echo "Test passed"
    exit 0
}

FAIL=1
trap cleanup EXIT HUP INT TERM

# Refresh apt
apt-get update

# Wait for snapd seeding
waitSnapdSeed

# Install LXD
snap remove lxd || true
snap install lxd --channel=latest/edge
apt-get install --no-install-recommends --yes jq iperf3
lxd waitready --timeout=300

# Configure LXD
lxd init --auto
set -x

# Start a container with no limits
echo "=> Start a container with no limits"
lxc launch ubuntu:20.04 c1

echo "==> Validate default values"
[ "$(lxc exec c1 -- nproc)" = "$(nproc)" ]
[ "$(lxc exec c1 -- grep ^MemTotal /proc/meminfo)" = "$(grep ^MemTotal /proc/meminfo)" ]
if [ -e "/sys/fs/cgroup/memory/memory.memsw.limit_in_bytes" ] || [ -e "/sys/fs/cgroup/memory.swap.max" ]; then
    [ "$(lxc exec c1 -- grep ^SwapTotal /proc/meminfo)" = "$(grep ^SwapTotal /proc/meminfo)" ]
else
    [ "$(lxc exec c1 -- grep ^SwapTotal /proc/meminfo)" = "SwapTotal:             0 kB" ]
fi

if [ -e "/sys/fs/cgroup/cpu" ]; then
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu/cpu.shares)" = "1024" ]
else
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu.weight)" = "100" ]
fi

if [ -e "/sys/fs/cgroup/pids" ]; then
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/pids/pids.max)" = "max" ]
else
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/pids.max)" = "max" ]
fi

if [ -e "/sys/fs/cgroup/memory" ]; then
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/memory/memory.swappiness)" = "$(cat /sys/fs/cgroup/memory/memory.swappiness)" ]
fi

if [ -e "/sys/fs/cgroup/net_prio" ]; then
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/net_prio/net_prio.ifpriomap)" = "$(cat /sys/fs/cgroup/net_prio/net_prio.ifpriomap)" ]
fi

echo "==> Testing CPU limits"
lxc config set c1 limits.cpu=2
[ "$(lxc exec c1 -- nproc)" = "2" ]

lxc config set c1 limits.cpu=200
[ "$(lxc exec c1 -- nproc)" = "$(nproc)" ]

lxc config set c1 limits.cpu=0,2
[ "$(lxc exec c1 -- nproc)" = "2" ]

lxc config set c1 limits.cpu=2-2
[ "$(lxc exec c1 -- nproc)" = "1" ]

lxc config unset c1 limits.cpu
[ "$(lxc exec c1 -- nproc)" = "$(nproc)" ]

lxc config set c1 limits.cpu.priority 5
if [ -e "/sys/fs/cgroup/cpu" ]; then
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu/cpu.shares)" = "1019" ]
else
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu.weight)" = "95" ]
fi

lxc config unset c1 limits.cpu.priority
if [ -e "/sys/fs/cgroup/cpu" ]; then
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu/cpu.shares)" = "1024" ]
else
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu.weight)" = "100" ]
fi

lxc config set c1 limits.cpu.allowance 10%
if [ -e "/sys/fs/cgroup/cpu" ]; then
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu/cpu.shares)" = "102" ]
else
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu.weight)" = "10" ]
fi

lxc config set c1 limits.cpu.allowance 10ms/100ms
if [ -e "/sys/fs/cgroup/cpu" ]; then
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu/cpu.shares)" = "1024" ]
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu/cpu.cfs_period_us)" = "100000" ]
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu/cpu.cfs_quota_us)" = "10000" ]
else
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu.weight)" = "100" ]
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/cpu.max)" = "10000 100000" ]
fi
lxc config unset c1 limits.cpu.allowance

echo "==> Testing memory limits"
lxc config set c1 limits.memory=2GiB
[ "$(lxc exec c1 -- grep ^MemTotal /proc/meminfo)" = "MemTotal:        2097152 kB" ]
if [ -e "/sys/fs/cgroup/memory/memory.memsw.limit_in_bytes" ] || [ -e "/sys/fs/cgroup/memory.swap.max" ]; then
    [ "$(lxc exec c1 -- grep ^SwapTotal /proc/meminfo)" = "SwapTotal:       2097152 kB" ]
else
    [ "$(lxc exec c1 -- grep ^SwapTotal /proc/meminfo)" = "SwapTotal:             0 kB" ]
fi

if [ -e "/sys/fs/cgroup/memory" ]; then
    lxc config set c1 limits.memory.swap=false
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/memory/memory.swappiness)" = "0" ]
    [ "$(lxc exec c1 -- grep ^SwapTotal /proc/meminfo)" = "SwapTotal:             0 kB" ]

    lxc config set c1 limits.memory.swap=true
    lxc config set c1 limits.memory.swap.priority=5
    # swappiness is 70 - 5 (priority)
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/memory/memory.swappiness)" = "65" ]
fi

if [ -e "/sys/fs/cgroup/memory/memory.memsw.limit_in_bytes" ] || [ -e "/sys/fs/cgroup/memory.swap.max" ]; then
    lxc config set c1 limits.memory 128MiB
    [ "$(lxc exec c1 -- grep ^MemTotal /proc/meminfo)" = "MemTotal:         131072 kB" ]

    lxc exec c1 -- mkdir -p /root/dd
    lxc exec c1 -- mount -t tmpfs tmpfs /root/dd -o size=2G
    lxc exec c1 -- dd if=/dev/zero of=/root/dd/blob bs=4M count=16
    dmesg -c >/dev/null 2>&1
    # shellcheck disable=SC2251
    ! lxc exec c1 -- dd if=/dev/zero of=/root/dd/blob bs=4M count=64
    dmesg | grep -q "Memory cgroup out of memory: Killed process"
    dmesg -c >/dev/null 2>&1

    # shellcheck disable=SC2251
    ! lxc stop c1 --force

    # Wait for post-stop to complete
    sleep 2s

    lxc config set c1 limits.memory.enforce soft
    lxc start c1
    lxc exec c1 -- mkdir -p /root/dd
    lxc exec c1 -- mount -t tmpfs tmpfs /root/dd -o size=2G
    dmesg -c >/dev/null 2>&1
    lxc exec c1 -- dd if=/dev/zero of=/root/dd/blob bs=4M count=64
    dmesg | grep -q "Memory cgroup out of memory: Killed process" && false
    dmesg -c >/dev/null 2>&1

    # shellcheck disable=SC2251
    ! lxc stop c1 --force

    # Wait for post-stop to complete
    sleep 2s

    lxc config unset c1 limits.memory
    lxc config unset c1 limits.memory.enforce
    lxc start c1
fi

echo "==> Testing process limits"
lxc config set c1 limits.processes=2000
if [ -e "/sys/fs/cgroup/pids" ]; then
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/pids/pids.max)" = "2000" ]
else
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/pids.max)" = "2000" ]
fi

echo "==> Testing network limits"
if [ -e "/sys/fs/cgroup/net_prio" ]; then
    # NOTE: No such thing as net_prio under cgroup2
    lxc config set c1 limits.network.priority=10
    lxc exec c1 -- grep -q "10$" /sys/fs/cgroup/net_prio/net_prio.ifpriomap
fi

lxc restart c1 --force
sleep 10s
IP=$(lxc network get lxdbr0 ipv4.address | cut -d/ -f1)
lxc exec c1 -- apt-get update
lxc exec c1 -- apt-get install --no-install-recommends --yes iperf3

iperf3 -s -D
lxc exec c1 -- iperf3 -c "${IP}" -J > iperf.json
E1=$(($(jq .end.sum_sent.bits_per_second < iperf.json | cut -d. -f1)/1024/1024))
lxc exec c1 -- iperf3 -R -c "${IP}" -J > iperf.json
I1=$(($(jq .end.sum_sent.bits_per_second < iperf.json | cut -d. -f1)/1024/1024))
echo "Throughput before limits: ${E1}Mbps / ${I1}Mbps"

lxc config device override c1 eth0 limits.egress=50Mbit limits.ingress=200Mbit
lxc exec c1 -- iperf3 -c "${IP}" -J > iperf.json
E2=$(($(jq .end.sum_sent.bits_per_second < iperf.json | cut -d. -f1)/1024/1024))
lxc exec c1 -- iperf3 -R -c "${IP}" -J > iperf.json
I2=$(($(jq .end.sum_sent.bits_per_second < iperf.json | cut -d. -f1)/1024/1024))
echo "Throughput after limits: ${E2}Mbps / ${I2}Mbps"
[ "${E2}" -lt "50" ]
[ "${I2}" -lt "200" ]

pkill -9 iperf3
lxc config device set c1 eth0 limits.egress= limits.ingress=

echo "==> Testing disk limits"
if [ -e /sys/fs/cgroup/init.scope/io.weight ]; then
    lxc config set c1 limits.disk.priority=5
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/io.weight)" = "default 500" ]
elif [ -e /sys/fs/cgroup/blkio/blkio.weight ]; then
    lxc config set c1 limits.disk.priority=5
    [ "$(lxc exec c1 -- cat /sys/fs/cgroup/blkio/blkio.weight)" = "500" ]
fi


lxc config device override c1 root limits.read=10iops limits.write=20iops
if [ -e /sys/fs/cgroup/init.scope/io.max ]; then
    lxc exec c1 -- grep -q "riops=10 wiops=20" /sys/fs/cgroup/io.max
else
    lxc exec c1 -- grep -q "10$" /sys/fs/cgroup/blkio/blkio.throttle.read_iops_device
    lxc exec c1 -- grep -q "20$" /sys/fs/cgroup/blkio/blkio.throttle.write_iops_device
fi

lxc config device set c1 root limits.read=10MB limits.write=20MB
if [ -e /sys/fs/cgroup/init.scope/io.max ]; then
    lxc exec c1 -- grep -q "rbps=10000000 wbps=20000000" /sys/fs/cgroup/io.max
else
    lxc exec c1 -- grep -q "10000000$" /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device
    lxc exec c1 -- grep -q "20000000$" /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device
fi

lxc config device set c1 root limits.read= limits.write=

echo "==> Testing the freezer"
lxc pause c1
! lxc exec c1 bash || false
lxc start c1

set +x
FAIL=0
